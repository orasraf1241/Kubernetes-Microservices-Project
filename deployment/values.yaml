# Configuration values for the Helm chart



# frontend-chart/values.yaml
frontend:
  # Docker image for the frontend application
  image: 851725517080.dkr.ecr.eu-west-1.amazonaws.com/unity-frontend:1.1.3
  # Port on which the frontend application will run
  port: 80
  # Number of replicas for the frontend deployment
  replicas: 1
  # Service name for the frontend application
  serviceName: frontend-service
  # URL for the customer web server service
  customerWebServerUrl: http://customer-web-server-service.default.svc.cluster.local:3001
  # URL for the customer management service
  customerManagementUrl: http://customer-management-service.default.svc.cluster.local:3000
  # Autoscaling configuration for the frontend application
  hpa:
    minReplicas: 1
    maxReplicas: 5
    cpu:
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 50

# Customer Management Application Configuration
customerManagement:
  # Docker image for the customer management application
  image: 851725517080.dkr.ecr.eu-west-1.amazonaws.com/customer-management:1.0.12
  # Port on which the customer management application will run
  port: 3000
  # Number of replicas for the customer management deployment
  replicas: 1
  # MongoDB host for the customer management application
  mongoHost: mongo
  # MongoDB port for the customer management application
  mongoPort: 27017
  # Kafka broker for the customer management application
  kafkaBroker: my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
  # Kafka group ID for the customer management application
  kafkaGroupId: my-group
  # MongoDB database name for the customer management application
  mongoDatabase: mydatabase
  # MongoDB collection name for the customer management application
  mongoCollection: purchases
  # Autoscaling configuration for the customer management application
  hpa:
    minReplicas: 1
    maxReplicas: 5
    cpu:
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 50

# Customer Web Server Application Configuration
customerWebServer:
  # Docker image for the customer web server application
  image: 851725517080.dkr.ecr.eu-west-1.amazonaws.com/customer-web-server:1.1.0
  # Port on which the customer web server application will run
  port: 3001
  # Number of replicas for the customer web server deployment
  replicas: 1
  # Kafka broker for the customer web server application
  kafkaBroker: my-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
  # Hostname for the customer management service
  managementServiceHost: customer-management-service
  # Port for the customer management service
  managementServicePort: 3000
  # Autoscaling configuration for the customer web server application
  hpa:
    minReplicas: 1
    maxReplicas: 5
    cpu:
      targetAverageUtilization: 50
    memory:
      targetAverageUtilization: 50

# MongoDB Configuration
mongo:
  # Docker image for MongoDB
  image: mongo:4.4
  # Port on which MongoDB will run
  port: 27017
  # Number of replicas for the MongoDB deployment
  replicas: 1
  # Persistent volume size for MongoDB
  storage: 1Gi
  # Host path for the persistent volume
  hostPath: /mnt/data
